#include<Windows.h>
#include<WinUser.h>

LRESULT CALLBACK WndProc(HWND, UINT, WPARAM, LPARAM);

int WINAPI WinMain(HINSTANCE hInst, HINSTANCE, LPSTR, int)
{
	LPWSTR szClassName = L"MyWindouClass";
	LPWSTR szTitleName = L"My first window";


	WNDCLASSEX wndclass;
	memset(&wndclass, 0, sizeof(wndclass));

	wndclass.cbSize = sizeof(wndclass);
	wndclass.lpszClassName = szClassName;
	wndclass.style = CS_HREDRAW | CS_VREDRAW;
	wndclass.hInstance = hInst;
	wndclass.lpfnWndProc = WndProc;
	wndclass.cbClsExtra = 0;
	wndclass.hCursor = LoadCursor(NULL, IDC_IBEAM);
	wndclass.hIcon = LoadIcon(NULL, IDI_HAND);
	wndclass.hbrBackground = (HBRUSH)CreateSolidBrush(RGB(0, 0, 0));
	if (!RegisterClassEx(&wndclass))
	{
		MessageBoxW(NULL, L"1", L"MessageBox", MB_OK);
		return 0;
	}

	HWND hWnd = CreateWindowEx(WS_EX_TOPMOST, szClassName,
		L"Window",
		WS_OVERLAPPEDWINDOW, 0, 0, 250, 250,
		NULL, NULL, hInst, NULL);
	if (!hWnd) { 
		MessageBoxW(NULL, L"2", L"MessageBox", MB_OK);
		return false; 
	}

	ShowWindow(hWnd, 1);
	UpdateWindow(hWnd);
	MSG msg;
	while (GetMessage(&msg, NULL, 0, 0)){
		TranslateMessage(&msg);
		DispatchMessage(&msg);
	}
	return msg.wParam;
}
LRESULT CALLBACK WndProc(HWND hwnd, UINT iMsg,
	WPARAM wParam, LPARAM lParam)
{
	HDC hdc; // Если нужно рисовать в окне
	PAINTSTRUCT ps;
	RECT rect;
	switch (iMsg) {
	case WM_DESTROY:
		PostQuitMessage(0);
		break;
	default:
		return DefWindowProc(hwnd, iMsg, wParam, lParam);
	}
	return 0;
}
